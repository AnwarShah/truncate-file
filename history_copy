find  -type f 
find  -type f | wc 
find -iname '*.deb' -type f
find -iname '*.deb' -type f | wc 
ls *.deb
mkdir -p 1/2/3/4/5/66/76/7/56/45/34/342/32/3/23/
mv db.deb 1/2/3/4/5/66/76/7/56/45/34/342/32/3/23/ -v
find -iname '*.deb' -type f | wc 
cd /media/linux+custom/linux/repo/Trusty-New/
find -iname '*.deb' -type f | wc 
cd /usr/share/fonts/truetype/
ls
cd ..
ls
find -iname 'anaktoria'
find -iname '*anaktoria*'
find -iname '*anaktoria*' -exec rm {} \;
sudo find -iname '*anaktoria*' -exec rm {} \;
sudo find -iname '*allura*' -exec rm -i {} \;
sudo find -iname '*allura*' 
sudo find -iname '*alex*' 
sudo find -iname '*alex*' -exec rm  -i {} \;
exit
cd /usr/share/fonts
ls
sudo find -iname '*alex*' -exec rm  -i {} \;
sudo find -iname '*ange*' -exec rm  -i {} \;
sudo find -iname '*ange*' 
sudo find -iname '*an*' 
sudo find -iname '*ani*' 
sudo find -iname 'ani*' 
sudo find -iname 'ange*' 
sudo find -iname 'An*' 
sudo find -iname 'Ang*' 
sudo find -iname 'Ar*' 
sudo find -iname 'Art*' 
sudo find -iname 'art*' 
fc-list 'art*'
fc-list '*art*'
fc-list '*ar*'
fc-list '*a*'
fc-list ''
fc-list 'a'
fc-list 'a*'
fc-list 'a\*'
fc-list 
fc-list --help
fc-list art
fc-list ar
fc-list an
fc-list An
fc-list A
fc-list A*
fc-list cl
fc-list *cl*
fc-list *C*
fc-list *cl* -v
fc-list *cl* -q
fc-list *cl* -V
fc-list *cl* -h
fc-list *cl* 
fc-list *cl* --verbose
man fc-list
fc-list [cs]
fc-list [s]
fc-list [/*/]
info fc-list
fc-match 'arch'
fc-pattern 'df'
fc-pattern 'arch*'
fc-pattern '*arch*'
fc-scan ''
fc-scan 'a'
fc-scan 
fc-query 
fc-query slkdf
fc-validate
sudo find -iname 'ar*' 
sudo find -iname 'bl*' 
sudo ~/.fonts/ find -iname 'bl*' 
sudo ~/.fonts find -iname 'bl*' 
sudo find ~/.fonts  -iname 'bl*' 
sudo find /home/learner/.local/share/font-manager/  -iname 'bl*' 
sudo find /home/learner/.local/share/  -iname 'bl*' 
sudo find /home/learner/  -iname 'bl*' 
sudo find /home/learner/  -iname 'bl*.ttf' 
fc-match 'blackjack
'
fc-list 'BlackJack'
$fdir=/usr/local/share/fonts/
fdir=/usr/local/share/fonts/
sudo find $fdir  -iname 'bl*.ttf' 
sudo find $fdir|.  -iname 'bl*.ttf' 
sudo find [$fdir|.]  -iname 'bl*.ttf' 
sudo find [$fdir,.]  -iname 'bl*.ttf' 
sudo find {$fdir,.}  -iname 'bl*.ttf' 
sudo find {$fdir,.}  -iname 'ar*.ttf' 
$fdir=/usr/local/share/fonts/, /usr/share/fonts/
$fdir="/usr/local/share/fonts/, /usr/share/fonts/"
$fdir="/usr/local/share/fonts/|/usr/share/fonts/"
fdir="/usr/local/share/fonts/|/usr/share/fonts/"
fdir
sudo find $fdir -iname 'ar*.ttf' 
fdir="/usr/local/share/fonts/,/usr/share/fonts/"
sudo find $fdir -iname 'ar*.ttf' 
fdir=/usr/local/share/fonts/,/usr/share/fonts/
sudo find $fdir -iname 'ar*.ttf' 
fdir=/usr/local/share/fonts/ /usr/share/fonts/
fdir=/usr/local/share/fonts/;/usr/share/fonts/
fdir=/usr/local/share/fonts/\,/usr/share/fonts/
sudo find $fdir -iname 'ar*.ttf' 
fdir={/usr/local/share/fonts/,/usr/share/fonts/}
sudo find $fdir -iname 'ar*.ttf' 
fdir=[/usr/local/share/fonts/,/usr/share/fonts/]
sudo find $fdir -iname 'ar*.ttf' 
fdir=Array[/usr/local/share/fonts/,/usr/share/fonts/]
sudo find $fdir -iname 'ar*.ttf' 
fdir=Array[/usr/local/share/fonts/ /usr/share/fonts/]
fdir=Array['/usr/local/share/fonts/' '/usr/share/fonts/']
fdir=Array('/usr/local/share/fonts/' '/usr/share/fonts/')
fdir=('/usr/local/share/fonts/' '/usr/share/fonts/')
fdir
$fdir
sudo find $fdir -iname 'ar*.ttf' 
sudo find $fdir,. -iname 'ar*.ttf' 
sudo find $fdir|. -iname 'ar*.ttf' 
sudo find {$fdir,.} -iname 'ar*.ttf' 
$fdir
$fdir[0]
echo $fdir[0]
echo $fdir
fdir=('/usr/local/share/fonts/' ,'/usr/share/fonts/')
echo $fdir
echo $fdir[0]
echo $fdir[@]
d1='/usr/local/share/fonts/'
d2=/usr/share/fonts
sudo find {$fdir,$d2} -iname 'ar*.ttf' 
sudo find {$d1,$d2} -iname 'ar*.ttf' 
sudo find {$d1,$d2} -iname 'black*.ttf' 
sudo find {$d1,$d2} -iname 'black*.ttf' -exec rm -i {} \;
sudo find {$d1,$d2} -iname 'danci*.ttf' -exec rm -i {} \;
sudo find {$d1,$d2} -iname 'delphine*.ttf' -exec rm -i {} \;
f=delphine
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=dkg
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=dkg*
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=domes*
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=el*
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=fem*
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=flat*
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
exit
cd /usr/share/fonts
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
$d1
d1=/usr/local/share/fonts/
d2=/usr/share/fonts
f1=Gard*|itwas
f1=Gard*,itwas
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f1={Gard*,itwas}
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f1={Gard*,itwas*}
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f1={Gard*,itwas*}
echo $f1
f={Gard*,itwas*}
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f={gard*,itwas*}
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f={gard*,itw*}
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=gard*
sudo find {$d1,$d2} -iname $f -exec rm -i {} \;
f=gard*|handle
f=gard*|handle*
f=(gard* handle*)
echo $f
echo $f[0]
f=(gard* , handle*)
echo $f[0]
echo $f
f={gard* , handle*}
f={gard* | handle*}
f={gard* handle*}
f=(gard* handle*)
echo ${f}
echo ${f[*]}
echo ${ f[*] }
echo ${ f[*]}
echo ${f[*]}
echo ${f[2]}
echo ${f[1]}
echo ${f[0]}
f=(gard* handle*)
sudo find {$d1,$d2} -iname 'itw' -exec rm -i {} \;
sudo find {$d1,$d2} -iname 'itw*' -exec rm -i {} \;
sudo find {$d1,$d2} -iname '*itw*' -exec rm -i {} \;
sudo find {$d1,$d2} -iname '*i*' -exec rm -i {} \;
sudo find {$d1,$d2} -iname '*it*' -exec rm -i {} \;
sudo find {$d1,$d2} -iname 'it*' -exec rm -i {} \;
f=(gard* handle*)
sudo find {$d1,$d2} -iname ${f[*]} -exec rm -i {} \;
f=(gard* | handle*)
f=(gard*  handle*)
sudo find {$d1,$d2} -iname ${f[*]} -exec rm -i {} \;
f=(gard*,handle*)
sudo find {$d1,$d2} -iname ${f[*]} -exec rm -i {} \;
f=(gard*,hand*)
sudo find {$d1,$d2} -iname ${f[*]} -exec rm -i {} \;
f=junk*
sudo find {$d1,$d2} -iname ${f[*]} -exec rm -i {} \;
f=mark
f=mark*
sudo find {$d1,$d2} -iname ${f[*]} -exec rm -i {} \;
sudo find {$d1,$d2} -iname music* -exec rm -i {} \;
sudo find {$d1,$d2} -iname pen* -exec rm -i {} \;
sudo find {$d1,$d2} -iname steve* -exec rm -i {} \;
sudo find {$d1,$d2} -iname steve*|swift* -exec rm -i {} \;
sudo find {$d1,$d2} -iname steve*,swift* -exec rm -i {} \;
sudo find {$d1,$d2} -iname "steve*|swift*" -exec rm -i {} \;
sudo find {$d1,$d2} -iname "steve* swift*" -exec rm -i {} \;
sudo find {$d1,$d2} -iname "steve* or swift*" -exec rm -i {} \;
sudo find {$d1,$d2} -iname "steve*|swift*" -exec rm -i {} \;
sudo find {$d1,$d2} -iname swift* -exec rm -i {} \;
sudo find {$d1,$d2} -iname white* -exec rm -i {} \;
sudo find {$d1,$d2} -iname whi* -exec rm -i {} \;
sudo find {$d1,$d2} -iname wink* -exec rm -i {} \;
fc-list 'Graph'
fc-list 'Consolas'
irb
sudo fc-cache -f -v
top
irb
pri
pry
irb
ls /home/learner/Programming/older-debs-cleaner/debs/34.deb 
dpkg --get-selections 
dpkg --get-selections | grep mint
sudo apt-get remove mint-themes
date
date --help
date
date -0
date 0
date %0
date -r
date -R
date -r Programming/
date -r .bash_aliases 
date -R
date 
date -R --universal
date -R --universal %D
date -R --universal +%D
date -R  +%D
date  +%D
date  +%T
date  --help
nano .bash_aliases 
. .bash_aliases 
nano .bash_aliases 
. .bash_aliases 
date -h
nano .bash_aliases 
. .bash_aliases 
date -h
nano .bash_aliases 
. .bash_aliases 
source .bash_aliases 
. .bash_aliases 
nano .bash_aliases 
. .bash_aliases 
nano .bash_aliases 
. .bash_aliases 
date h
nano .bash_aliases 
cd /var/lib/gems/1.9.1/gems/ruby-debian-0.3.8/
ls
find -iname '*.rb'
find -iname '*.rb' -exec chmod o+w {} \;
find -iname '*.rb' -exec sudo chmod o+w {} \;
find -iname '*.rb' -exec sudo chmod o-w {} \;
find -iname '*.rb' -exec sudo chmod o+w {} \;
find -iname '*.rb' -exec sudo chmod -v o+w {} \;
find -iname '*.rb' -exec sudo chmod -v 777 {} \;
find -iname '*.bak__' -exec sudo chmod -v 777 {} \;
find -iname '*.bak___' -exec sudo chmod -v 777 {} \;
find -iname '*.bak_' -exec sudo chmod -v 777 {} \;
find -iname '*.rb' -exec sudo chmod -v 644 {} \;
cd ..
cp -r ruby-debian-0.3.8/ ~/Programming/
cd ~/Programming/
mv ruby-debian-0.3.8/ ~/.gem/ruby/1.9.1/gems/
ls  ~/.gem/ruby/1.9.1/gems/
cd  ~/.gem/ruby/1.9.1/gems/
mkdir ../ruby-debian-0.3.8
ls
mv *.* ../ruby-debian-0.3.8/ -v
mv ** ../ruby-debian-0.3.8/ -v
ls
ls -a
mv ../ruby-debian-0.3.8/ .
ls
exit
cd /
sudo ln -s /media/windows+vids/ windows
ls
cd windows
ls
ln -s /windows/dev-tools/ruby-gems-repo/gems/ 
ls
rm gems
cd ~/Links/
ln -s /windows/dev-tools/ruby-gems-repo/gems/ 
ls
cd /
ln -s /media/linux+custom/ linux
sudo ln -s /media/linux+custom/ linux
cd /media/
ls
sudo rm linuxmint-17-cinnamon-dvd-32bit.iso/
sudo rmdir linuxmint-17-cinnamon-dvd-32bit.iso/
sudo rmdir *
cd mine2
ls
cd mine
ls
cd ..
ls mine
cd /
sudo ln -s /media/books+mobile/ books
ls
ar --help
ar p libdrm-nouveau2_2.4.56-1_i386
ar p ladish_1+dfsg0-4_i386.deb 
ar 
ar t ladish_1+dfsg0-4_i386.deb 
ar t libdrm-nouveau2_2.4.56-1_i386
tar t libdrm-nouveau2_2.4.56-1_i386
tar --help
tar -t libdrm-nouveau2_2.4.56-1_i386
tar -tf libdrm-nouveau2_2.4.56-1_i386
tar -tvf libdrm-nouveau2_2.4.56-1_i386
tar -tvf libdrm-nouveau2_2.4.56-1_i386.deb
file-roller --help
file-roller --help-all
unp
sudo apt-get install unp
file -i libdrm-nouveau2_2.4.56-1_i386.deb 
file -m libdrm-nouveau2_2.4.56-1_i386.deb 
file -z libdrm-nouveau2_2.4.56-1_i386.deb 
file -z ladish_1+dfsg0-4_i386.deb 
file -z libdrm-nouveau2_2.4.56-1_i386.deb 
unp --help
unp -s
unp -U ladish_1+dfsg0-4_i386.deb 
unp -U libdrm-nouveau2_2.4.56-1_i386
unp -U libdrm-nouveau2_2.4.56-1_i386.deb 
dpkg --build .
cd ..
dpkg --build libdrm-nouveau2_2.4.56-1_i386/
suod cp -r PT_Serif/ /usr/share/fonts/truetype/ -v
suod cp -r PT_Sans/ /usr/share/fonts/truetype/ -v
ls
exit
ls
sdf
rmdir *
find -type d
find -type d -exec rmdir {} \;
cd 
find -type d -exec rmdir {} \;
gedit ~/.bash_aliases 
find -iname '*.desktop'
find -iname '*.desktop' -exec mv {} \;
ls
find -iname '*.desktop' -exec mv {} \;
find -iname '*.desktop' -exec rm {} \;
source ~/.bash_aliases 
nano ~/.bash_aliases 
source ~/.bash_aliases 
remove_empty_folders 
nano ~/.bash_aliases 
source ~/.bash_aliases 
nano ~/.bash_aliases 
remove_empty_folders 
cd .
cd ..
ls
remove_empty_folders 
cd .local/share/
find -iname '*okular*'
cd /usr/share/applications/
find -iname '*okular*'
sudo rm kde4/okularApplication_* -v
cat  kde4/okular.desktop 
irb
ls
move_to_lettered_folder.rb 
move_to_lettered_folder.rb deb
touch {1..2}.txt
touch {1..20}.txt
move_to_lettered_folder.rb txt
touch {A..q}.txt
touch {'A'..'q'}.txt
touch {"A".."Q"}.txt
echo ['a'..'z']
touch 'a'..'z'.txt
touch {'a'..'z'}.txt
touch ['a'..'z'].txt
touch i for i in 'a'..'z'
touch {a..z}.txt
move_to_lettered_folder.rb txt
remove_empty_folders 
touch {a..Q}.tx
touch {a..q}.tx
move_to_lettered_folder.rb 
irb
ls
cd .local/share/
grep '*XDG*'
grep '*XDG*' *
grep '*XDG*' **
grep '*XDG*' **/*
grep '*XDG*' cat *
grep '*XDG*' cat **/*
cat -R * | grep '*XDG*' 
grep '*XDG*' cat **/*
grep '*XDG*' 
grep '*XDG*' user-places.xbel
grep '*XDG*' mime/aliases 
mime/aliases 
nautilus .
sudo apt-get install nautilus-renamer 
nautilus-sendto 
nautilus-sendto ~/todo.txt
dpkg -L nautilus-renamer 
python /usr/share/nautilus-renamer/nautilus-renamer.py 
python /usr/share/nautilus-renamer/nautilus-renamer.py .
geidt /usr/share/nautilus-renamer/nautilus-renamer.py .
subl /usr/share/nautilus-renamer/nautilus-renamer.py .
python3 /usr/share/nautilus-renamer/nautilus-renamer.py .
python3 /usr/share/nautilus-renamer/nautilus-renamer.py 
cd 
cd Programming/older-debs-cleaner/debs/
ls
move_to_lettered_folder.rb 
move_to_lettered_folder.rb deb
cd 
cd -
sudo gem install libarchive
sudo gem install filemagic
ls ~/Links/gems/ruby-filemagic-0.6.3.gem 
sudo gem install mimemagic
backGems.sh 
irb
nano .profile 

cd $icons_d
ls
gsettings set org.gnome.desktop.interface icon-theme 'Mint-X-Dark'
gsettings set org.gnome.desktop.interface icon-theme 'Mint-Dark'
gsettings set org.gnome.desktop.interface icon-theme 'Mint-X-Dark'
gsettings set org.gnome.desktop.interface icon-theme 'Faenza-Dark'
sudo gem uninstall debeasy
cd $debs_d
ls
pwd
cd Trusty-New/
pwd
cd $gems_d
ls
gem server
exit
gem build 
gem build debeasy.gemspec 
mv debeasy $gems_d -v
mv -v debeasy $gems_d 
mv -v debeasy $gems_d/
mv -v ./debeasy-0.0.7.gem $gems_d/
cd ..
cd older-debs-cleaner/
ls
cd vendor/cache/
ls
cp -i *.gem $gems_d -v
exit
backGems.sh 
cd $gems_d
ls
ls debeasy-0.0.7.gem 
sudo gem install --local debeasy-0.0.7.gem 
ls
apt-cache policy foreman
cd ~/Programming/
ls
git clone git@github.com:AnwarShah/debeasy.git
sudo cp debeasy/lib/debeasy/package.rb /var/lib/gems/1.9.1/gems/debeasy-0.0.7/lib/debeasy/package.rb -v
fontforge 
fontforge -h
fontforge --help
cd Proxima_Nova/
ls
fontforge ProximaNova-Regular.ttf 
apt-cache show fontforge-nox 
fdupes 
fdupes .
fdupes --helpp
fdupes --help
fdupes -d
fdupes -d .
fc-list 'Proxi'
fc-list | grep 'Proxi'
rm /home/learner/.local/share/fonts/ProximaNovaRegular.ttf:
rm /home/learner/.local/share/fonts/ProximaNovaRegular.ttf
fc-list 
fc-list  | grep :style
fc-list  | grep :style=".*"
fc-list  | grep :style="Thin"
fc-list  | grep :style="Light"
fc-list  | grep "Prox"
rm /home/learner/.local/share/fonts/ProximaNova-Thin.ttf
fc-list  | grep "Prox"
fc-list  | grep :style="Semi"
fc-list  | grep "Prox"
rm /home/learner/.local/share/fonts/ProximaNova-Thin.ttf
gsettings set org.gnome.desktop.interface font-name 'Proxima Nova-Regular'
gsettings set org.gnome.desktop.interface font-name 'Proxima Nova '
gsettings set org.gnome.desktop.interface font-name 'Proxima Nova 11'
fc-list  | grep :style="RegularIta"
fc-list  | grep :style="Regular-Ita"
fc-list  | grep :style="Italic"
suod cp -r Ambiance $themes_d -v
suod cp -r Radiance/ $themes_d -v
rm -r Ambiance
rm -r Radiance/
tar --help | head
tar cf * 
tar -cf * 
tar -crf * 
tar -cf * 
gunzip --help
gzip --help
gzip * 
cd ..
ls
gzip Ambiance/* 
ls
gzip Ambiance 
gzip --help
gzip -r Ambiance 
gzip -dr Ambiance 
gzip -r Ambiance ambi.tar.gz
gzip -dr Ambiance 
dpkg-name *
move_to_lettered_folder.rb 
dpkg -L googlefontdirectory-tools 
/usr/share/googlefontdirectory-tools/tools/nonhinting/otf2sfd.py ProximaNova-Regular.otf 
/usr/share/googlefontdirectory-tools/tools/nonhinting/sfd2ttf.py ProximaNova-Regular.otf 
fc-list | grep 'Prox'
sudo rm /usr/local/share/fonts/p/ProximaNova_Regular.ttf
pyrenamer 
nano .profile 
nano ~/.bash_profile 
nano ~/.bash_aliases 
exit
/usr/share/googlefontdirectory-tools/tools/nonhinting/otf2sfd.py "Mark Simonson - Proxima Nova Alt Black.otf" | /usr/share/googlefontdirectory-tools/tools/nonhinting/sfd2ttf.py 
ls *.sdf
ls *.otf
basename "Mark Simonson - Proxima Nova Black.otf" 
name "Mark Simonson - Proxima Nova Black.otf" 
man basename
basename otf "Mark Simonson - Proxima Nova Black.otf" 
man basename
basename  "Mark Simonson - Proxima Nova Black.otf" otf
basename  "Mark Simonson - Proxima Nova Black.otf" .otf
bash convert.sh 
for f in `ls *.otf`; do end; done
for f in `ls *.otf`; do ; done
for f in `ls *.otf`; do  done
for f in `ls *.otf` do  done; done
for f in `ls *.otf` do  done
for f in `ls *.otf` ; echo 'what'
for f in `ls *.otf` do ; echo 'what'
for f in `ls *.otf` do ; echo 'what'; done
for f in `ls *.otf` do; echo what
f in `ls *.otf`
for f in `ls *.otf`; echo "ldjsfl"
for f in `ls *`; echo "jlsd"
for f in `ls *`; echo "jlsd";
help
for f in `ls *`;  do echo 'sjdlf'; done
for f in `ls *`; echo 'sjdlf'
for f in `ls *`; do echo sdlfs; end; done
bash convert.sh 
for f in `ls *`; echo 'sjdlf'
for f in `ls *`; echo 'sjdlf'; done
for f in `ls *`; do echo 'sjdlf'; done
bash convert.sh 
for f in `ls *`; do echo 'sjdlf'; done
bash convert.sh 
ls *.otf
ls --help
ls *.otf -N
bash convert.sh 
find -iname '*otf'
bash convert.sh 
find -iname '*otf'
find -iname '*otf' -print
find -iname '*otf' -print0
find -iname '*otf' -print
bash convert.sh 
find -iname '*otf' -print 
find 
find -h
fidn --help
find --help
bash convert.sh 
find --help
bash convert.sh 
find -iname '*.otf'
find -iname '*.otf' -exec /usr/share/googlefontdirectory-tools/tools/nonhinting/otf2sfd.py {} \;
bash convert.sh 
exit
suod cp -r Caecilia_LT_Std/ /usr/share/fonts/truetype/ -v
sudo rm ‘/usr/share/fonts/truetype/Caecilia_LT_Std/f_00056c.otf.ttf’
sudo rm /usr/share/fonts/truetype/Caecilia_LT_Std/f_00056c.otf.ttf
gsettings list-recursively | grep 'Local'
gsettings list-recursively | grep 'Loca'
gsettings list-recursively | grep 'loca'
gsettings list-recursively | grep 'location'
gsettings list-recursively | grep 'location-bar'
gsettings set org.gnome.nautilus.window-state start-with-location-bar true
gsettings set org.gnome.nautilus.preferences always-use-location-entry false
gsettings set org.gnome.desktop.interface  icon-theme  'Mint-X'
gsettings set org.gnome.desktop.interface  icon-theme  'Mint-X-Dark'
update-icon-caches
update-icon-caches $icons_d 
update-icon-caches /usr/share/icons/Deepin/
sudo update-icon-caches /usr/share/icons/Deepin/
sudo update-icon-caches /usr/share/icons/Mint-X
sudo update-icon-caches /usr/share/icons/Mint-X-Dark/
nano ~/.bash_profile 
nano ~/.bash_completion 
nano ~/.profile 
. ~/.profile 
cd $font_d
ls

pwd
pyrenamer -r pwd
fontimage 
fontimage --help
fontforge --help
ls
nano .profile 
. .profile 
cd $font_d
ls
cd truetype/
ls
sudo mkdir proxima-nova-all
cd 
cd '/media/linux+custom/fonts/Proxima_Nova/Proxima Nova 120' 
cd ..
ls
sudo cp Proxima\ Nova\ 120/* /usr/share/fonts//truetype/proxima-nova-all/ -v
fc-list | grep 'Prox'
sudo apt-get remove bluedevil bluez-alsa bluez-*
sudo apt-get remove bluedevil bluez-alsa bluez
sudo apt-get remove bluez-alsa bluez
sudo apt-get remove bluez-alsa 
sudo apt-get remove bluez-gstreamer bluez-cups 
sudo service bluetooth force-reload
sudo service bluetooth restart
sudo apt-get remove blueman 
sudo service bluetooth restart
sudo reboot
sudo apt-get remove bluedevil 
sudo update-alternatives --config x-cursor-theme 
exit
obex-data-server 
obexpush
obexpushd 
gsettings set org.gnome.desktop.interface font-name 'Proxima Nova Alt'
gsettings set org.gnome.desktop.interface font-name 'Proxima Nova Alt 11'
gsettings set org.gnome.desktop.interface font-name 'Abel 11'
gsettings set org.gnome.desktop.interface font-name 'MerriWeather 11'
gsettings set org.gnome.desktop.interface font-name 'MerriWeather Sans 11'
ln -s /media/books+mobile/APK/ 
ls
sudo nano /etc/apt/sources.list
cd /
cd 
mkdir shortcuts
ls
cd shortcuts/
cd /
sudo unlink linux
sudo ln -s /media/linux+custom/linux/ 
ls
cd linux/repo/
ls
suod nano /etc/apt//sources.list
cd ~/shortcuts/
ls
cd repo
ls
mv Trusty trusty
mv Trusty-New/ trusty_new
ls
sudo apt-get update
irb
tar --help
gzip --help
gzip -d aarddict.android-20150428-113249.tar.gz 
remove_empty_folders 
gzip -d ccc71.at.free-811e2cc1c700b79aeeab5b54c46c54ec.apk.gz 
ls
gunzip --help
find Mobile/ -iname '*apk.gz'
find Sola_Roms/ -iname '*apk.gz'
find APK/ -iname '*apk.gz'
cd ../mine
ls
find  -iname '*apk.gz'
cd ../mine2
ls
ln -s Books/java 
rm Books
rm java 
ln -s /media/books+mobile/Books/java
gedit cs_books.desktop 
gedit ruby_books/
ls java_books/
cd java_books/
s
ls
pyrenamer -r .
pyrenamer -r pwd
pyrenamer -r .
dpkg -L pyrenamer 
cd /usr/share/pyshared/pyrenamer/
ls
gedit pyrenamer.py 
mkdir 
mkdir test
ls
cd test
ls
touch 1_2_3-32-df\ sdf.txt
ls
irb
cd test/
ls
gedit newname = File.basename(f).gsub('_','')
subl filerename.rb
ruby filerename.rb 
ls
mv 123_32_df_sdf_txt 123_32_df_sdf.txt
irb
ruby filerename.rb 
ls
mv 123_32_df_sdf 123_32_df_sdf\ jsdkl.txt
ruby filerename.rb 
ls
mv 123_32_df_sdf 123_32_df_sdf_jsdkl.txt 123_32_df_sdf_jsdkl---.txt
mv 123_32_df_sdf 123_32_df_sdf_jsdkl.txt 123_32_df_sdf_jsdkl---d.txt
mv 123_32_df_sdf 123_32_df_sdf_jsdkl.txt 123_32_l---d.txt
ls
mv 123_32_df_sdf 123_32_l---d.txt
mv 123_32_df_sdf_jsdkl.txt 123_32_l---d.txt
ls
ruby filerename.rb 
ls
ruby filerename.rb 
ls
find -iname '*apk.gz'
find -iname '*apk.gz' -exec gzip -d {} \;
find -iname '*apk.gz' -exec gzip -d {} ; rm {} \;
find -iname '*apk.gz' -exec gzip -d {} \;
touch extract.sh
gedit extract.sh 
gedit extract.sh &
bash extract.sh 
find -iname '*apk.tar'
find -iname '*apk.tar*'
find -iname '*apk.gz*'
gunzip --help
gunzip zip.me-38503b85e215a33663e17cdcacab1818.apk.gz 
bash extract.sh 
find
gunzip com.actionlauncher.playstore-f9609793ef6880dafa0d28c9b546dbe4.apk.gz 
gunzip com.call.recorder-eae7d7a8337d9b8d176bbece06288801.apk.gz -v
bash extract.sh 
ls
find -iname '*.apk.gz'
find -iname '*.apk.gz*'
find -iname '*.apk'
find -iname '*.apk' -exec md5sum {} \; > report.txt
gedit report.txt 
mv report.txt ~/Desktop/
for i in `find -iname '*.apk.gz'`; do gunzip $i; done
cd Desktop/
for i in `find -iname '*.apk.gz'`; do gunzip $i; done
bash sdf 
for i in `find -iname '*.apk.gz'`; do gunzip $i; rm $i; done
rm sdf 
cd test/
ruby filerename.rb 
mv filerename.rb create_craps.rb
mv create_craps.rb clear_craps.rb
mv clear_craps.rb ~/bin/
ls
rm
rm 123_32_l_d.txt 
cd ..
rmdir test/
ls
chmod +x ~/bin/clear_craps.rb 
cd F.A.F/java_books/
ls
clear_craps.rb 
sub ~/bin/clear_craps.rb 
subl ~/bin/clear_craps.rb 
clear_craps.rb 
ls
subl ~/bin/clear_craps.rb 
ls
clear_craps.rb 
ls
clear_craps.rb 
ls
clear_craps.rb 
ls
clear_craps.rb 
ls
clear_craps.rb 
ls
clear_craps.rb 
ls
subl ~/bin/clear_craps.rb 
clear_craps.rb 
subl ~/bin/clear_craps.rb 
clear_craps.rb 
clear_craps.rb 
subl ~/bin/clear_craps.rb 
clear_craps.rb 
irb
ln -s ~/Programming/my-scripts/clear_craps.rb 
ln -s ~/Programming/my-scripts/move_to_lettered_folder.rb 
irb
pry
ruby analyze.rb 
pry
ruby analyze.rb 
cd Desktop/
ls
ruby analyze.rb 
irb
ruby analyze.rb 
clear_craps.rb 
sudo apt-get install gnome-system-monitor 
sudo apt-get install gnome-system-monitor -t trusty
apt-cache policy gnome-system-monitor 
peazip -style=cleanlooks
ls /usr/local/lib/
ldconfig
ls /usr/local/share/PeaZip/
sudo cp /usr/local/share/PeaZip/libQt4Pas.so /usr/local/lib/ -v
cd /usr/local/lib
ls
sudo ldconfig
peazip -style=cleanlooks
find --help
man find
find -iname '*.deb'
cd Programming/python-apt/python-apt-0.9.4/
ls
cd ..
ls
cd python-apt-0.9.4/tests/
ls
cd data/
ls
cd test_debs/
ls
nautilus .
cd ~/Downloads/FlareGet/
ls
find -iname '*.deb'
cd Applications/
ls
gdebi Vivaldi_TP3.1.0.162.9-1_i386.deb 
du Vivaldi_TP3.1.0.162.9-1_i386.deb 
du -h Vivaldi_TP3.1.0.162.9-1_i386.deb 
ls
rm Vivaldi_TP3.1.0.162.9-1_i386.deb 
cat ~/bin/backGems.sh 
mv *.apk $apt_d -v
ls
nautilus .
sudo nano /etc/apt/sources.list
sudo nano /etc/fstab
sudo unlink /linux
ls 
sudo mkdir /linux
sudo rm /.kde/ -v
sudo rm /.kde/ -r
cd -
cd ~/shortcuts/
ls
sudo umount /media/linux+custom 
sudo mount /linux/
sudo ln -s /media/linux+custom/ /linux/
remove_empty_folders 
ln -s /linux/linux 
ln -s /books/Books/linux/ linux_books
sudo apt-get autoremove appgrid 
lsd
ls
exit
find -iname '*guake*'
cd .gconf/apps/
ls
rm -r guake/
ls
rm -r blueman/
rm -r compiz-1/
rm -r hamster-applet/
rm -r nm-applet/
rm -r pyrenamer/
rm -r pdfmod/
rm -r meld/
ls
rm -r .
cd ..
ls
pwd
rm -r apps/

rm -r desktop/
exit
unlink linux+custom/
unlink rmdir
sudo rmdir linux+custom/
ln -s /linux/ linux+custom
sudo ln -s /linux/ linux+custom
gedit ~/.config/user-dirs.dirs
xdg-user-dirs-update 
xdg-user-dirs-gtk-update 
hg status
hg log
hg status
hg push 
sudo apt-get install midori
apt-cache policy midori
sudo apt-get install midori
Install: sudo add-apt-repository ppa:midori/midori-dev
sudo apt-get update
sudo apt-get install midori
irb
sudo add-apt-repository -y ppa:midori/midori-dev
cat /etc/lsb-release 
sudo nano /etc/lsb-release 
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=14.04
DISTRIB_CODENAME=trusty
DISTRIB_DESCRIPTION="Linux Mint 17 Qiana"
sudo add-apt-repository ppa:midori/midori-dev
update-repo midori-midori-dev-trusty.list 
sudo add-apt-repository ppa:midori/ppa
update-repo midori-ppa-trusty.list 
apt-cache policy midori
sudo nano /etc/apt//sources.list.d/midori-midori-dev-trusty.list
apt-cache policy midori
sudo apt-get install midori
irb
cd shortcuts/
ls
ln -s linux/repo/ 
ls
